library(quarto)
h1("Depression & Academic Performance", tags$br()," A Case Study")
sliderInput("bins", "Number of bins:",
min = 1, max = 50, value = 30)
#| context: server
output$distPlot <- renderPlot({
x <- faithful[, 2]  # Old Faithful Geyser data
bins <- seq(min(x), max(x), length.out = input$bins + 1)
hist(x, breaks = bins, col = 'darkgray', border = 'white')
})
install.packages("rmarkdown")
sliderInput("bins", "Number of bins:",
min = 1, max = 50, value = 30)
library(rmarkdown)
getwd()
# |context: server
output$distPlot <- renderPlot({
x <- faithful[, 2]  # Old Faithful Geyser data
bins <- seq(min(x), max(x), length.out = input$bins + 1)
hist(x, breaks = bins, col = 'darkgray', border = 'white')
})
# Chunk 1
sliderInput("bins", "Number of bins:",
min = 1, max = 50, value = 30)
# Chunk 1
sliderInput("bins", "Number of bins:",
min = 1, max = 50, value = 30)
# Chunk 1
sliderInput("bins", "Number of bins:",
min = 1, max = 50, value = 30)
# Load the necessary packages
my_packages <-c("tidyverse","likert","ggthemes","psych",
"GPArotation","ordinal","MASS","rcompanion","brant","DescTools")
lapply(my_packages, require, character.only = TRUE)
survey <- read.csv("dataset/survey.csv", stringsAsFactors = TRUE)
# Load the necessary packages
my_packages <-c("tidyverse","likert","ggthemes","psych",
"GPArotation","ordinal","MASS","rcompanion","brant","DescTools")
lapply(my_packages, require, character.only = TRUE)
survey <- read.csv("dataset/CleansurveyData.csv", stringsAsFactors = TRUE)
socio <- survey[,c(2:11,73,74)]
summary(socio)
# Load the necessary packages
my_packages <-c("tidyverse","likert","ggthemes","psych",
"GPArotation","ordinal","MASS","rcompanion","brant","DescTools")
lapply(my_packages, require, character.only = TRUE)
survey <- read.csv("dataset/CleansurveyData.csv", stringsAsFactors = TRUE)
socio <- survey[,c(2:11,73,74)]
summary(socio)
lapply(my_packages, require)
lapply(my_packages)
E
lapply(my_packages, require, character.only = TRUE)
#| echo: false
#| fig-cap: "Air Quality"
# Load the necessary packages
my_packages <-c("tidyverse","likert","ggthemes","psych",
"GPArotation","ordinal","MASS","rcompanion","brant","DescTools")
lapply(my_packages, require, character.only = TRUE)
survey <- read.csv("dataset/CleansurveyData.csv", stringsAsFactors = TRUE)
socio <- survey[,c(2:11,73,74)]
summary(socio)
#| echo: true
#| warning: false
#| fig-cap: "Air Quality"
# Load the necessary packages
#| o
my_packages <-c("tidyverse","likert","ggthemes","psych",
"GPArotation","ordinal","MASS","rcompanion","brant","DescTools")
lapply(my_packages, require, character.only = TRUE)
survey <- read.csv("dataset/CleansurveyData.csv", stringsAsFactors = TRUE)
socio <- survey[,c(2:11,73,74)]
summary(socio)
#| echo: false
#| warning: false
#| fig-cap: "Air Quality"
# Load the necessary packages
#| o
my_packages <-c("tidyverse","likert","ggthemes","psych",
"GPArotation","ordinal","MASS","rcompanion","brant","DescTools")
lapply(my_packages, require, character.only = TRUE)
survey <- read.csv("dataset/CleansurveyData.csv", stringsAsFactors = TRUE)
#| echo: false
#| output: false
#| warning: false
#| fig-cap: "Air Quality"
# Load the necessary packages
#| o
my_packages <-c("tidyverse","likert","ggthemes","psych",
"GPArotation","ordinal","MASS","rcompanion","brant","DescTools")
lapply(my_packages, require, character.only = TRUE)
survey <- read.csv("dataset/CleansurveyData.csv", stringsAsFactors = TRUE)
#| echo: true
#| output: false
#| warning: false
#| eval: true
# Load the necessary packages
my_packages <-c("tidyverse","likert","ggthemes","psych",
"GPArotation","ordinal","MASS","rcompanion","brant","DescTools")
lapply(my_packages, require, character.only = TRUE)
survey <- read.csv("dataset/CleansurveyData.csv", stringsAsFactors = TRUE)
socio <- survey[,c(2:11,73,74)]
summary(socio)
# Amount of stress experienced by students
stress_scores <- c("above 300","250 - 299","200 - 249","150 - 199","below - 149")
Stress <- data.frame(stress =stress$stress,scores = stress_scores, count = stress$n)
# Amount of stress experienced by students
stress_scores <- c("above 300","250 - 299","200 - 249","150 - 199","below - 149")
Stress <- data.frame(stress =stress$stress,scores = stress_scores, count = stress$n)
# Amount of stress experienced by students
stress <- count(socio, stress)
stress_scores <- c("above 300","250 - 299","200 - 249","150 - 199","below - 149")
Stress <- data.frame(stress =stress$stress,scores = stress_scores, count = stress$n)
Stress$scores <-factor(Stress$scores, ordered = is.ordered(Stress$scores))
# Define custom colors for each stress score category
custom_colors <- c("#FF0000", "#808080", "#595959", "#99020f", "#A6A6A6")
#make the plot
ggplot(Stress,aes(Stress,x = scores, y = count, fill = stress)) +
geom_col() +
geom_text(aes(label = count), vjust = 6, color = "white", size = 7) +
scale_fill_manual(values = custom_colors) +  # Use custom colors
labs(title = "Distribution of Response from each stress score category",
subtitle = "59 students stress score fall between 300 and ",
x = "stress scores", y = "number of students") +
theme(
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, size = 20),
plot.subtitle = element_text(hjust = 0.5, size = 16),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)
)
71+59+43+32+34
59/239
(59/239) *100
(59+34/239) *100
(59+34)/239
34/239
# Amount of stress experienced by students
stress <- count(socio, stress)
stress_scores <- c("above 300","250 - 299","200 - 249","150 - 199","below - 149")
Stress <- data.frame(stress =stress$stress,scores = stress_scores, count = stress$n)
Stress$scores <-factor(Stress$scores, ordered = is.ordered(Stress$scores))
# Define custom colors for each stress score category
custom_colors <- c("#FF0000", "#808080", "#595959", "#99020f", "#A6A6A6")
#make the plot
ggplot(Stress,aes(Stress,x = scores, y = count, fill = stress)) +
geom_col() +
geom_text(aes(label = count), vjust = 6, color = "white", size = 7) +
scale_fill_manual(values = custom_colors) +  # Use custom colors
labs(title = "25% of the undergraduate students suffers major depression",
subtitle = "while 14% suffers serious depression ",
x = "stress scores", y = "number of students") +
theme(
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, size = 20),
plot.subtitle = element_text(hjust = 0.5, size = 16),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)
)
# Amount of stress experienced by students
stress <- count(socio, stress)
stress_scores <- c("above 300","250 - 299","200 - 249","150 - 199","below - 149")
Stress <- data.frame(stress =stress$stress,scores = stress_scores, count = stress$n)
Stress$scores <-factor(Stress$scores, ordered = is.ordered(Stress$scores))
# Define custom colors for each stress score category
custom_colors <- c("#FF0000", "#808080", "#595959", "#99020f", "#A6A6A6")
#make the plot
ggplot(Stress,aes(Stress,x = scores, y = count, fill = stress)) +
geom_col() +
geom_text(aes(label = count), vjust = 6, color = "white", size = 7) +
scale_fill_manual(values = custom_colors) +  # Use custom colors
labs(title = "25% of the undergraduate students suffers major depression",
subtitle = "while 14% suffers serious depression ",
x = "stress scores", y = "number of students") +
theme(
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, size = 10),
plot.subtitle = element_text(hjust = 0.5, size = 16),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)
)
# Amount of stress experienced by students
stress <- count(socio, stress)
stress_scores <- c("above 300","250 - 299","200 - 249","150 - 199","below - 149")
Stress <- data.frame(stress =stress$stress,scores = stress_scores, count = stress$n)
Stress$scores <-factor(Stress$scores, ordered = is.ordered(Stress$scores))
# Define custom colors for each stress score category
custom_colors <- c("#FF0000", "#808080", "#595959", "#99020f", "#A6A6A6")
#make the plot
ggplot(Stress,aes(Stress,x = scores, y = count, fill = stress)) +
geom_col() +
geom_text(aes(label = count), vjust = 6, color = "white", size = 7) +
scale_fill_manual(values = custom_colors) +  # Use custom colors
labs(title = "25% of the undergraduate students suffers major depression",
subtitle = "while 14% suffers serious depression ",
x = "stress scores", y = "number of students") +
theme(
panel.background = element_blank(),
plot.title = element_text(hjust = 0, size = 16),
plot.subtitle = element_text(hjust = 0, size = 16),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)
)
# Amount of stress experienced by students
stress <- count(socio, stress)
stress_scores <- c("above 300","250 - 299","200 - 249","150 - 199","below - 149")
Stress <- data.frame(stress =stress$stress,scores = stress_scores, count = stress$n)
Stress$scores <-factor(Stress$scores, ordered = is.ordered(Stress$scores))
# Define custom colors for each stress score category
custom_colors <- c("#FF0000", "#808080", "#595959", "#99020f", "#A6A6A6")
#make the plot
ggplot(Stress,aes(Stress,x = scores, y = count, fill = stress)) +
geom_col() +
geom_text(aes(label = count), vjust = 6, color = "white", size = 7) +
scale_fill_manual(values = custom_colors) +  # Use custom colors
labs(title = "25% of the undergraduate students suffers major depression",
subtitle = "while 14% suffers serious depression ",
x = "stress scores", y = "number of students") +
theme(
panel.background = element_blank(),
plot.title = element_text(hjust = 0.1, size = 16),
plot.subtitle = element_text(hjust = 0, size = 16),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)
)
#make the plot
ggplot(Stress,aes(Stress,x = scores, y = count, fill = stress)) +
geom_col() +
geom_text(aes(label = count), vjust = , color = "white", size = 7) +
scale_fill_manual(values = custom_colors) +  # Use custom colors
labs(title = "25% of the undergraduate students suffers major depression",
subtitle = "while 14% suffers serious depression ",
x = "stress scores", y = "number of students") +
theme(
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, size = 16),
plot.subtitle = element_text(hjust = 0, size = 16),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)
)
# Amount of stress experienced by students
stress <- count(socio, stress)
stress_scores <- c("above 300","250 - 299","200 - 249","150 - 199","below - 149")
Stress <- data.frame(stress =stress$stress,scores = stress_scores, count = stress$n)
Stress$scores <-factor(Stress$scores, ordered = is.ordered(Stress$scores))
# Define custom colors for each stress score category
custom_colors <- c("#FF0000", "#808080", "#595959", "#99020f", "#A6A6A6")
#make the plot
ggplot(Stress,aes(Stress,x = scores, y = count, fill = stress)) +
geom_col() +
geom_text(aes(label = count), vjust = 5, color = "white", size = 7) +
scale_fill_manual(values = custom_colors) +  # Use custom colors
labs(title = "25% of the undergraduate students suffers major depression",
subtitle = "while 14% suffers serious depression ",
x = "stress scores", y = "number of students") +
theme(
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, size = 16),
plot.subtitle = element_text(hjust = 0, size = 16),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)
)
# Amount of stress experienced by students
stress <- count(socio, stress)
stress_scores <- c("above 300","250 - 299","200 - 249","150 - 199","below - 149")
Stress <- data.frame(stress =stress$stress,scores = stress_scores, count = stress$n)
Stress$scores <-factor(Stress$scores, ordered = is.ordered(Stress$scores))
# Define custom colors for each stress score category
custom_colors <- c("#FF0000", "#808080", "#595959", "#99020f", "#A6A6A6")
#make the plot
ggplot(Stress,aes(Stress,x = scores, y = count, fill = stress)) +
geom_col() +
geom_text(aes(label = count), vjust = 5, color = "white", size = 7) +
scale_fill_manual(values = custom_colors) +  # Use custom colors
labs(title = "25% of the undergraduate students suffers major depression",
subtitle = "while 14% suffers serious depression ",
x = "stress scores", y = "number of students") +
theme(
panel.background = element_blank(),
plot.title = element_text(hjust = 0.2, size = 16),
plot.subtitle = element_text(hjust = 0, size = 16),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)
)
df <- read.csv("ordinal.csv", stringsAsFactors = TRUE)
df <- read.csv("Ordinal.csv", stringsAsFactors = TRUE)
#| echo: true
#| output: false
#| warning: false
#| eval: true
# Load the necessary packages
my_packages <-c("tidyverse","likert","ggthemes","psych",
"GPArotation","ordinal","MASS","rcompanion","brant","DescTools")
lapply(my_packages, require, character.only = TRUE)
survey <- read.csv("dataset/CleansurveyData.csv", stringsAsFactors = TRUE)
socio <- survey[,c(2:11,73,74)]
summary(socio)
# Amount of stress experienced by students
stress <- count(socio, stress)
stress_scores <- c("above 300","250 - 299","200 - 249","150 - 199","below - 149")
Stress <- data.frame(stress =stress$stress,scores = stress_scores, count = stress$n)
Stress$scores <-factor(Stress$scores, ordered = is.ordered(Stress$scores))
# Define custom colors for each stress score category
custom_colors <- c("#FF0000", "#808080", "#595959", "#99020f", "#A6A6A6")
#make the plot
ggplot(Stress,aes(Stress,x = scores, y = count, fill = stress)) +
geom_col() +
geom_text(aes(label = count), vjust = 5, color = "white", size = 7) +
scale_fill_manual(values = custom_colors) +  # Use custom colors
labs(title = "25% of the undergraduate students suffers major depression",
subtitle = "while 14% suffers serious depression ",
x = "stress scores", y = "number of students") +
theme(
panel.background = element_blank(),
plot.title = element_text(hjust = 0.2, size = 16),
plot.subtitle = element_text(hjust = 0, size = 16),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)
)
df <- read.csv("Ordinal.csv", stringsAsFactors = TRUE)
df <- read.csv("dataset/Ordinal.csv", stringsAsFactors = TRUE)
head(df)
df <- df[,-c(1,2)]
head(df)
# OLR using ordinal package
#### model null
modelnull <- clm(as.factor(C.G.P) ~ 1,
dataa = my_data,
link = "logit")
# OLR using ordinal package
#### model null
modelnull <- clm(as.factor(C.G.P) ~ 1,
data = df,
link = "logit")
#### model1
model1 <- clm(as.factor(C.G.P) ~ as.factor(stress) + as.factor(gender),
data = df,
link = "logit")
anova(modelnull,model1)
nagelkerke(fit = model1, null = modelnull)
summary(model1)
confint(model1)
exp(coef(model1))
exp(confint(model1))
fit <- predict(model1)
fit
# test of goodness
chisq.test(my_data$C.G.P,unlist(predict(model1)))
# test of goodness
chisq.test(df$C.G.P,unlist(predict(model1)))
#Compute confusion table and misclassification error
predictOLR <- predict(model1, df)
ctab <- table(predictOLR, fit)
ctab
mean(as.character(df$C.G.P) != as.character(predictOLR))
(CCR <- sum(diag(cTab)) / sum(cTab)) # Calculate the classification rate
ctab <- table(predictOLR, fit)
ctab
mean(as.character(df$C.G.P) != as.character(predictOLR))
(CCR <- sum(diag(ctab)) / sum(ctab)) # Calculate the classification rate
(OLRestimates <- coef(summary(OLRmodel)))
#| echo: true
#| output: false
#| warning: false
#| eval: true
df <- read.csv("dataset/Ordinal.csv", stringsAsFactors = TRUE)
df <- df[,-c(1,2)]
head(df)
# OLR using ordinal package
#### model null
modelnull <- clm(as.factor(C.G.P) ~ 1,
data = df,
link = "logit")
#### model1
model1 <- clm(as.factor(C.G.P) ~ as.factor(stress) + as.factor(gender),
data = df,
link = "logit")
anova(modelnull,model1)
nagelkerke(fit = model1, null = modelnull)
summary(model1)
confint(model1)
exp(coef(model1))
exp(confint(model1))
model1$fitted.values
fit <- predict(model1)
# test of goodness
chisq.test(df$C.G.P,unlist(predict(model1)))
#Compute confusion table and misclassification error
predictOLR <- predict(model1, df)
ctab <- table(predictOLR, fit)
ctab
mean(as.character(df$C.G.P) != as.character(predictOLR))
(CCR <- sum(diag(ctab)) / sum(ctab)) # Calculate the classification rate
#| echo: false
#| output: false
#| warning: false
#| eval: true
# Load the necessary packages
my_packages <-c("tidyverse","likert","ggthemes","psych",
"GPArotation","ordinal","MASS","rcompanion","brant","DescTools")
lapply(my_packages, require, character.only = TRUE)
survey <- read.csv("dataset/CleansurveyData.csv", stringsAsFactors = TRUE)
#| echo: false
#| output: false
#| warning: false
#| eval: true
df <- read.csv("dataset/Ordinal.csv", stringsAsFactors = TRUE)
df <- df[,-c(1,2)]
head(df)
# OLR using ordinal package
#### model null
modelnull <- clm(as.factor(C.G.P) ~ 1,
data = df,
link = "logit")
#### model1
model1 <- clm(as.factor(C.G.P) ~ as.factor(stress) + as.factor(gender),
data = df,
link = "logit")
anova(modelnull,model1)
nagelkerke(fit = model1, null = modelnull)
summary(model1)
confint(model1)
exp(coef(model1))
exp(confint(model1))
model1$fitted.values
fit <- predict(model1)
# test of goodness
chisq.test(df$C.G.P,unlist(predict(model1)))
#Compute confusion table and misclassification error
predictOLR <- predict(model1, df)
ctab <- table(predictOLR, fit)
ctab
mean(as.character(df$C.G.P) != as.character(predictOLR))
(CCR <- sum(diag(ctab)) / sum(ctab)) # Calculate the classification rate
# OLR using ordinal package
#### model null
modelnull <- clm(as.factor(C.G.P) ~ 1,
data = df,
link = "logit")
anova(modelnull,model1)
nagelkerke(fit = model1, null = modelnull)
summary(model1)
confint(model1)
exp(coef(model1))
# test of goodness
chisq.test(df$C.G.P,unlist(predict(model1)))
anova(modelnull,model1)
summary(model1)
confint(model1)
exp(coef(model1))
exp(confint(model1))
# test of goodness
chisq.test(df$C.G.P,unlist(predict(model1)))
anova(modelnull,model1)
summary(model1)
exp(coef(model1))
exp(confint(model1))
# test of goodness
chisq.test(df$C.G.P,unlist(predict(model1)))
summary(model1)
exp(coef(model1))
exp(confint(model1))
# test of goodness
chisq.test(df$C.G.P,unlist(predict(model1)))
View(modelnull)
